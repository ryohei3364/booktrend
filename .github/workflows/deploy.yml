name: CI/CD Pipeline with Separate Envs

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 取得程式碼
    - name: Checkout source code
      uses: actions/checkout@v3

    # 2. 登入 Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 3. 建構 Docker image
    - name: Build Docker image
      run: |
        if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
          TAG="latest"
        else
          TAG="develop"
        fi
        docker build -t ryohei3364/booktrend-app:$TAG .

    # 4. 推送到 Docker Hub
    - name: Push Docker image
      run: |
        if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
          TAG="latest"
        else
          TAG="develop"
        fi
        docker push ryohei3364/booktrend-app:$TAG

    # 5. 解碼 SSH 私鑰
    - name: Decode SSH private key
      env:
        EC2_KEY_BASE64: ${{ secrets.EC2_KEY_BASE64 }}
      run: |
        echo "$EC2_KEY_BASE64" | base64 -d > secure.pem
        chmod 600 secure.pem

    - name: Set deploy environment variables # 遠端有分正式 (~/booktrend) 跟測試 (~/booktrend-test) 兩個目錄
      run: |
        if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
          echo "DEPLOY_DIR=booktrend" >> $GITHUB_ENV
          echo "TAG=latest" >> $GITHUB_ENV
        else
          echo "DEPLOY_DIR=booktrend-test" >> $GITHUB_ENV
          echo "TAG=develop" >> $GITHUB_ENV
        fi

    # 6. Rsync 設定檔到 EC2
    - name: Rsync BookTrend files
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        DEPLOY_DIR: ${{ env.DEPLOY_DIR }}
      run: |
        rsync -avz -e "ssh -i secure.pem -o StrictHostKeyChecking=no" docker-compose.yml $EC2_USER@$EC2_HOST:~/${DEPLOY_DIR}/
        rsync -avz -e "ssh -i secure.pem -o StrictHostKeyChecking=no" .env $EC2_USER@$EC2_HOST:~/${DEPLOY_DIR}/


    # 7. SSH 到 EC2，部署容器
    - name: Sync config and deploy
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        DEPLOY_DIR: ${{ env.DEPLOY_DIR }}
        TAG: ${{ env.TAG }}
      run: |
        ssh -o StrictHostKeyChecking=no -i secure.pem $EC2_USER@$EC2_HOST << EOF
          cd ~/${DEPLOY_DIR}

          echo "🧼 清除舊容器..."
          docker compose down

          echo "📦 拉取新 image..."
          docker compose pull ryohei3364/booktrend-app:${TAG}

          echo "🚀 啟動服務..."
          docker compose up -d

          echo "✅ 部署完成"
        EOF
        